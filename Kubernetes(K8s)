 Kubernetes /K8s
is an open source platform designed to automate the deployment,scaling and management of containerized application/containers.
Container Orchestration /container management tool- Kubernetes manages clusters of containers,ensuring they run efficiently across multiple machine.
Features of K8s
- Container orchestration 
- automated scaling
- Self -Healing
- service Discovery & Load balancing
- Storage Orchestration: Kubernetes allows you to automatically mount the storage system of your choice, whether from local storage, cloud providers, or network storage systems.
- Automated Rollouts & Rollbacks: Kubernetes can manage the deployment of new versions of applications without downtime, and roll back to previous versions if something goes wrong.

Architecture of K8s
1)Kubernetes only manage pods not container
2)Worker node/minion
i)Kubelet
- kubelet is the agent running on node
- kubelet communicate the controller manager through API server & send all information to master .
- Observe and manage the pods(how many container should there be in a pod)
- kubelet ensures that the desired state of the containers as defined by master kubelet sees and control all these things
- 

ii) Kube-Proxy
- All networking should be done by kube-proxy
- Assigning ip adress to to pod

A Kubernetes cluster is a group of nodes that run containerized applications and are managed by the Kubernetes control plane
Architecture of kubernetes 
in this architecture kubernetes has two main plane one is control plane and another is worker plane
1) the control plane is responsible for managing the kubernetes cluster
2) it make decision about the cluster,such as scheduling and monitoring the cluster state.

the main component of the control plane is 
- API Server 
- kube scheduler
- controller manager
- etcd
API server
The API server is the front end of the kubernetes control plane
it is basically resposible for communication between control plane and worker plane
and also updates the cluster state in etcd.

kube schedule
the scheduler assign the pods to nodes based on resources availability
it handle pod creation and management

controller manager 
- it is resposible for running controller processess.
controller are resposible for maintaing the desired state of pods

etcd
it store all metadata of cluster in key value format
like configuration and state information

Worker plane
the worker plane consist of worker node that run containerized application
each worker node has essential component that communicate with the control plane

Kubelet
kubelet is the agent running on each node that ensure container are running in a pod.
it communicate with the control plane and receive instruction about which pods to run on the node.

kube proxy 
kube  proxy maintain network rules on nodes ,assigning ip adress and configuring load balancer.
allowing communication between pods and services within the cluster

Container runtime engine
this is the software resposible for running the container
and manage container image on node 

Pods 
pods are the smallest deployable units
the group of one or more conatainer with shared storage and network resources and specification how to run the containers



same version of cluster and  ectl and kubectl
